name: CD - Main Branch

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run build
      run: npm run build
      
    - name: Run tests
      run: npm test

  docker-build-push:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to Docker Hub
      if: ${{ secrets.DOCKER_USERNAME && secrets.DOCKER_PASSWORD }}
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |
          ${{ secrets.DOCKER_USERNAME && 'stackapp/docker-stack-api' || '' }}
          ghcr.io/${{ github.repository }}
        tags: |
          type=ref,event=branch
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}
          
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64,linux/arm64

  semantic-release:
    needs: [test, docker-build-push]
    runs-on: ubuntu-latest
    if: ${{ secrets.NPM_TOKEN }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run semantic release
      run: npx semantic-release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  deploy-notification:
    needs: [test, docker-build-push]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: Deployment Status
      run: |
        if [ "${{ needs.test.result }}" == "success" ] && [ "${{ needs.docker-build-push.result }}" == "success" ]; then
          echo "✅ Deployment successful!"
          echo "Docker images pushed to:"
          echo "- GHCR: ghcr.io/${{ github.repository }}:latest"
          if [ -n "${{ secrets.DOCKER_USERNAME }}" ]; then
            echo "- Docker Hub: stackapp/docker-stack-api:latest"
          else
            echo "- Docker Hub: Skipped (credentials not configured)"
          fi
        else
          echo "❌ Deployment failed!"
          echo "Test result: ${{ needs.test.result }}"
          echo "Docker build result: ${{ needs.docker-build-push.result }}"
          exit 1
        fi